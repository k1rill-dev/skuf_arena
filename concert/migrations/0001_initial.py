# Generated by Django 5.0.3 on 2024-05-01 10:45

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BaseConcertExtension',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Concert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('artist', models.CharField(max_length=100, verbose_name='Артист')),
                ('title', models.CharField(max_length=100, verbose_name='Название')),
                ('description', models.TextField(verbose_name='Описание')),
                ('vk_event', models.CharField(max_length=100, verbose_name='Ссылка на ВК')),
                ('address', models.CharField(max_length=100, verbose_name='Адрес')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата проведения')),
            ],
            options={
                'verbose_name': 'Концерт',
                'verbose_name_plural': 'Концерты',
            },
        ),
        migrations.CreateModel(
            name='ConcertPhotos',
            fields=[
                ('baseconcertextension_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='concert.baseconcertextension')),
                ('photo', models.ImageField(upload_to='media/%Y/%m/%d/photos', verbose_name='Фото')),
            ],
            options={
                'verbose_name': 'Фото',
                'verbose_name_plural': 'Фото',
            },
            bases=('concert.baseconcertextension',),
        ),
        migrations.CreateModel(
            name='ConcertPriceList',
            fields=[
                ('baseconcertextension_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='concert.baseconcertextension')),
                ('place', models.CharField(max_length=100, verbose_name='Место')),
                ('price', models.IntegerField(verbose_name='Цена')),
            ],
            options={
                'verbose_name': 'Цена',
                'verbose_name_plural': 'Цены',
            },
            bases=('concert.baseconcertextension',),
        ),
        migrations.CreateModel(
            name='ConcertTags',
            fields=[
                ('baseconcertextension_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='concert.baseconcertextension')),
                ('tag', models.CharField(max_length=350, verbose_name='Тэг')),
            ],
            options={
                'verbose_name': 'Тэг',
                'verbose_name_plural': 'Тэги',
            },
            bases=('concert.baseconcertextension',),
        ),
        migrations.CreateModel(
            name='ConcertVideos',
            fields=[
                ('baseconcertextension_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='concert.baseconcertextension')),
                ('video', models.CharField(max_length=350, verbose_name='Видео')),
            ],
            options={
                'verbose_name': 'Видео',
                'verbose_name_plural': 'Видео',
            },
            bases=('concert.baseconcertextension',),
        ),
        migrations.AddField(
            model_name='baseconcertextension',
            name='concert',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='concert.concert', verbose_name='Концерт'),
        ),
    ]
